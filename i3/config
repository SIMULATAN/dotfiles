# use win / super as main mod key
set $mod Mod4
# use alt as secondary mod key
set $mod2 Mod1

# start composer
exec --no-startup-id picom --experimental-backends --config ~/.config/i3/picom.conf -b

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# the lock.sh script uses either i3lock-color or vanilla i3lock.
exec --no-startup-id xss-lock --transfer-sleep-lock -- "~/.config/i3/lock.sh" --no-fork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
# Don't remove the quotes or the ';' will get treated as a i3 command and not the unix one
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status; ~/.config/i3/volume.sh"
bindsym XF86AudioLowerVolume exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status; ~/.config/i3/volume.sh"
bindsym XF86AudioMute exec --no-startup-id "pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status; ~/.config/i3/volume.sh"
bindsym XF86AudioMicMute exec --no-startup-id "pactl set-source-mute @DEFAULT_SOURCE@ toggle; $refresh_i3status"

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# send notifications for caps lock
bindsym --release Caps_Lock exec --no-startup-id ~/.config/i3/caps_lock.sh

# Brightness buttons
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 10
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 10

bindsym Control+F4 exec --no-startup-id xbacklight -inc 10
bindsym Control+F3 exec --no-startup-id xbacklight -dec 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+t exec {{terminal}} {{terminal_arguments}}

# kill focused window
bindsym $mod+Shift+q kill

# switch to last workspace with Super + #Tab
bindsym $mod+Tab workspace back_and_forth

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+b split h

# split in vertical orientation
bindsym $mod+Shift+v split v

# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+w layout tabbed
bindsym $mod+Shift+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod2+1 workspace number $ws11
bindsym $mod2+2 workspace number $ws12
bindsym $mod2+3 workspace number $ws13
bindsym $mod2+4 workspace number $ws14
bindsym $mod2+5 workspace number $ws15
bindsym $mod2+6 workspace number $ws16
bindsym $mod2+7 workspace number $ws17
bindsym $mod2+8 workspace number $ws18
bindsym $mod2+9 workspace number $ws19
bindsym $mod2+0 workspace number $ws20

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod2+Shift+1 move container to workspace number $ws11
bindsym $mod2+Shift+2 move container to workspace number $ws12
bindsym $mod2+Shift+3 move container to workspace number $ws13
bindsym $mod2+Shift+4 move container to workspace number $ws14
bindsym $mod2+Shift+5 move container to workspace number $ws15
bindsym $mod2+Shift+6 move container to workspace number $ws16
bindsym $mod2+Shift+7 move container to workspace number $ws17
bindsym $mod2+Shift+8 move container to workspace number $ws18
bindsym $mod2+Shift+9 move container to workspace number $ws19
bindsym $mod2+Shift+0 move container to workspace number $ws20

# move focused container to workspace AND switch to that workspace
bindsym $mod+Control+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Control+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Control+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Control+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Control+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Control+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Control+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Control+8 move container to workspace number $ws8; workspace number $ws8
bindsym $mod+Control+9 move container to workspace number $ws9; workspace number $ws9
bindsym $mod+Control+0 move container to workspace number $ws10; workspace number $ws10
bindsym $mod2+Control+1 move container to workspace number $ws11; workspace number $ws11
bindsym $mod2+Control+2 move container to workspace number $ws12; workspace number $ws12
bindsym $mod2+Control+3 move container to workspace number $ws13; workspace number $ws13
bindsym $mod2+Control+4 move container to workspace number $ws14; workspace number $ws14
bindsym $mod2+Control+5 move container to workspace number $ws15; workspace number $ws15
bindsym $mod2+Control+6 move container to workspace number $ws16; workspace number $ws16
bindsym $mod2+Control+7 move container to workspace number $ws17; workspace number $ws17
bindsym $mod2+Control+8 move container to workspace number $ws18; workspace number $ws18
bindsym $mod2+Control+9 move container to workspace number $ws19; workspace number $ws19
bindsym $mod2+Control+0 move container to workspace number $ws20; workspace number $ws20

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+$mod2+F4 exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# lock i3
bindsym $mod+$mod2+l exec "~/.config/i3/lock.sh"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# i3-gaps
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

gaps inner 10
gaps outer -11

# dracula theme
# class                 border  bground text    indicator child_border
client.focused          #6272A4 #6272A4 #F8F8F2 #6272A4   #6272A4
client.focused_inactive #44475A #44475A #F8F8F2 #44475A   #44475A
client.unfocused        #282A36 #282A36 #BFBFBF #282A36   #282A36
client.urgent           #44475A #FF5555 #F8F8F2 #FF5555   #FF5555
client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36

client.background       #F8F8F2

#bar {
#  colors {
#    background #282A36
#    statusline #F8F8F2
#    separator  #44475A
#
#    focused_workspace  #44475A #44475A #F8F8F2
#    active_workspace   #282A36 #44475A #F8F8F2
#    inactive_workspace #282A36 #282A36 #BFBFBF
#    urgent_workspace   #FF5555 #FF5555 #F8F8F2
#    binding_mode       #FF5555 #FF5555 #F8F8F2
#  }
#  tray_output none
#}

# terrible way to do this, but unfortunately, it doesn't work without the piping into bash...
exec_always --no-startup-id echo "if ! polybar-msg cmd quit; then pkill -f polybar; fi && polybar -c ~/.config/polybar/polybar.ini" | bash

# run dmenu (dracula theme)
bindsym $mod+d exec "dmenu_run -nf '#F8F8F2' -nb '#282A36' -sb '#6272A4' -sf '#F8F8F2' -fn 'monospace-10' -p 'dmenu%'"

# open explorer when pressing $mod + E (0% windows inspired i swear!)
bindsym $mod+e exec "{{file_manager}}"

# Screenshots
bindsym Print exec --no-startup-id flameshot gui

# Browser
bindsym $mod+w exec --no-startup-id firefox

# hide borders when only one window is on the workspace
hide_edge_borders both
# hide title bar in non-stacked view
for_window [class="^.*"] border pixel 1

# make ulauncher settings window floating per default
for_window [class="Ulauncher"] floating enable

exec --no-startup-id dunst -config ~/.config/dunst/dunstrc
exec_always --no-startup-id notify-send "i3 Restarted" -u low -t 2000 -a i3

# set background image
exec_always --no-startup-id if ! nitrogen --help &>/dev/null; then ~/.fehbg; else nitrogen --set-auto ~/Pictures/wallpaper.jpg; fi
