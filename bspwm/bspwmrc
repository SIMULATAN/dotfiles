#!/bin/bash

function startOrRestart() {
  startOrRestartImpl "$1" &
}

function startOrRestartImpl() {
  # the name of the program, without arguments
  # required to kill the right process
  EXECUTABLE="$(echo $1 | cut -f 1 -d " ")"
  pkill $EXECUTABLE && pwait $EXECUTABLE; $1
}

startOrRestart sxhkd

VARS=$(echo {1..10} {a..j})
IFS=' ' read -r -a WANTED_DESKTOPS <<< $VARS
echo ${WANTED_DESKTOPS[*]}

PRIMARY_MONITOR="$(xrandr | grep primary | cut -d ' ' -f 1)"

while IFS= read -r monitor; do
	while IFS= read -r desktop; do
		for i in "${!WANTED_DESKTOPS[@]}"; do
			if [[ ${WANTED_DESKTOPS[i]} = $desktop ]]; then
				unset 'WANTED_DESKTOPS[i]'
			fi
		done
	done <<< "$(bspc query -D --names -m $monitor)"
done <<< "$(bspc query -M --names | grep --invert $PRIMARY_MONITOR)"

# label from 1-10 and a-j, making a total of 20 workspaces
# required for sxhkd to work properly
#bspc desktop -d {1..10} {a..j}
bspc monitor $PRIMARY_MONITOR -d ${WANTED_DESKTOPS[*]}

./setup-desktops.sh

bspc config border_width          2
bspc config window_gap            7

bspc config split_ratio           0.5
bspc config automatic_scheme      alternate

bspc config normal_border_color   "#182032"
bspc config focused_border_color  "#44475a"

bspc config focus_follows_pointer true

# no padding when only a single node is on the screen
# exception: top (leave some space for polybar)
# we re-use the value of `window_gap` here to have the same padding for
# the windows independent of the monocle status
bspc config single_monocle        true
bspc config gapless_monocle       true
bspc config borderless_monocle    true
bspc config top_monocle_padding   $(bspc config window_gap)

# set cursor to the normal black cursor instead of the "x"
xsetroot -cursor_name left_ptr &

pkill polybar
# thanks to Adrian Petrescu for this script!
# https://github.com/polybar/polybar/issues/763#issuecomment-331604987
if type "xrandr"; then
  for m in $(xrandr --query | grep " connected" | cut -d " " -f1); do
    MONITOR=$m polybar --reload top &
  done
else
  polybar --reload top &
fi
startOrRestart dunst
startOrRestart picom -b
~/.fehbg

# auto-lock the screen when in suspend / sleep
xss-lock --transfer-sleep-lock -- "lock.sh" --no-fork

startOrRestart flameshot
